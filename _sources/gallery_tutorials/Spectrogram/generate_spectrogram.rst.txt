
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_tutorials/Spectrogram/generate_spectrogram.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_tutorials_Spectrogram_generate_spectrogram.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tutorials_Spectrogram_generate_spectrogram.py:


==============================================
Generation with default parameters
==============================================

This code will show you how to compute spectrograms

.. GENERATED FROM PYTHON SOURCE LINES 10-13

Prerequisites
------------------------
Your dataset must be built before you can do any processing on it ; see the use case :ref:`sphx_glr_gallery_tutorials_Dataset_build_dataset.py` to do this.

.. GENERATED FROM PYTHON SOURCE LINES 15-17

Codes
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 17-26

.. code-block:: default






    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 28-33

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Run the class :class:`OSmOSE.Spectrogram.Spectrogram`

.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: default


    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))









.. GENERATED FROM PYTHON SOURCE LINES 40-41

Check size of spectrogram

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default


    spectrogram.check_spectro_size()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    your smallest tile has a duration of: 30.0 (s), with a number of spectra of 1463 



    your resolutions : time =  0.021 (s) / frequency =  48.828 (Hz)




.. GENERATED FROM PYTHON SOURCE LINES 45-46

Initialize everything needed for spectrogram computation ; in particular, this method will segment and/or resample audio files if needed

.. GENERATED FROM PYTHON SOURCE LINES 46-54

.. code-block:: default


    spectrogram.dynamic_min = -140
    spectrogram.dynamic_max = -12
    spectrogram.initialize()

    wav_path = glob.glob(path_osmose_dataset+f'{dataset_name}/data/audio/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/*wav')






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    It seems these spectrogram parameters are already initialized. If it is an error or you want to rerun the initialization, add the `force_init` argument.




.. GENERATED FROM PYTHON SOURCE LINES 55-56

The method :meth:`OSmOSE.Spectrogram.Spectrogram.process_all_files` will generate spectrograms for the different pre segmented and/or resampled (if necessary) audio files

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default


    spectrogram.process_all_files(list_wav_to_process=wav_path)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Existing files detected for audio file 20211204_064000.wav! They will be overwritten.
    Generating spectrograms for 20211204_064000.wav
    - data min : -0.05041514248009193 
     - data max : 0.05087180175843474 
     - data mean : -3.389725784813923e-05 
     - data std : 0.00819057627276753
    - min log spectro : -137.91923924137282 
     - max log spectro : -5.35448813729464 

    Existing files detected for audio file 20211204_064500.wav! They will be overwritten.
    Generating spectrograms for 20211204_064500.wav
    - data min : -0.03430079803717911 
     - data max : 0.0366197702593772 
     - data mean : -2.906596115100738e-05 
     - data std : 0.007114513069441149
    - min log spectro : -165.5644138536312 
     - max log spectro : -13.445076680038522 

    Existing files detected for audio file 20211204_065000.wav! They will be overwritten.
    Generating spectrograms for 20211204_065000.wav
    - data min : -0.07174948617300494 
     - data max : 0.0638473820621174 
     - data mean : -3.394455412248411e-05 
     - data std : 0.007829718926139706
    - min log spectro : -156.67156600855992 
     - max log spectro : -6.9084853981987475 

    Existing files detected for audio file 20211204_065500.wav! They will be overwritten.
    Generating spectrograms for 20211204_065500.wav
    - data min : -0.2268965969119568 
     - data max : 0.16253770952346766 
     - data mean : -3.108689397928615e-05 
     - data std : 0.012455880071785384
    - min log spectro : -152.04740133964415 
     - max log spectro : 3.817557952194472 

    Existing files detected for audio file 20211204_070000.wav! They will be overwritten.
    Generating spectrograms for 20211204_070000.wav
    - data min : -0.037079987492122435 
     - data max : 0.03271631739772594 
     - data mean : -2.2722167477134425e-05 
     - data std : 0.006921378620772827
    - min log spectro : -153.00733900711163 
     - max log spectro : -12.696189260718569 

    Existing files detected for audio file 20211204_070500.wav! They will be overwritten.
    Generating spectrograms for 20211204_070500.wav
    - data min : -0.03918317189308489 
     - data max : 0.03924493241192095 
     - data mean : -3.887921135058395e-05 
     - data std : 0.0070792823782342
    - min log spectro : -175.89237505659446 
     - max log spectro : -12.526673630591311 

    Existing files detected for audio file 20211204_071000.wav! They will be overwritten.
    Generating spectrograms for 20211204_071000.wav
    - data min : -0.043214563880757895 
     - data max : 0.045805557713708846 
     - data mean : -2.8250201705676537e-05 
     - data std : 0.006968460933037484
    - min log spectro : -148.8863395762741 
     - max log spectro : -12.66264653954325 

    Existing files detected for audio file 20211204_071500.wav! They will be overwritten.
    Generating spectrograms for 20211204_071500.wav
    - data min : -0.10037166278445415 
     - data max : 0.09734695327877109 
     - data mean : -3.201120923659414e-05 
     - data std : 0.0117620413298528
    - min log spectro : -149.68019292108272 
     - max log spectro : -5.436494076158973 

    Existing files detected for audio file 20211204_072000.wav! They will be overwritten.
    Generating spectrograms for 20211204_072000.wav
    - data min : -0.03496926811176782 
     - data max : 0.035431722391122314 
     - data mean : -3.3135518222332065e-05 
     - data std : 0.007018086293843772
    - min log spectro : -145.04438629286747 
     - max log spectro : -11.06073406930454 





.. GENERATED FROM PYTHON SOURCE LINES 60-61

Visualize an example of spectrogram 

.. GENERATED FROM PYTHON SOURCE LINES 61-78

.. code-block:: default


    spectrogram_path = glob.glob(path_osmose_dataset+f'{dataset_name}/processed/spectrogram/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/{spectrogram.nfft}_{spectrogram.window_size}_{spectrogram.overlap}/image/*png')

    from matplotlib import pyplot as plt
    from matplotlib import image as mpimg
  
    image = mpimg.imread(spectrogram_path[0])
    plt.imshow(image, interpolation='nearest', aspect='auto')

    ax = plt.gca()
    ax.xaxis.set_tick_params(labelbottom=False)
    ax.yaxis.set_tick_params(labelleft=False)
    ax.set_xticks([])
    ax.set_yticks([])

    plt.show()




.. image-sg:: /gallery_tutorials/Spectrogram/images/sphx_glr_generate_spectrogram_001.png
   :alt: generate spectrogram
   :srcset: /gallery_tutorials/Spectrogram/images/sphx_glr_generate_spectrogram_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 11.393 seconds)


.. _sphx_glr_download_gallery_tutorials_Spectrogram_generate_spectrogram.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: generate_spectrogram.py <generate_spectrogram.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: generate_spectrogram.ipynb <generate_spectrogram.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
