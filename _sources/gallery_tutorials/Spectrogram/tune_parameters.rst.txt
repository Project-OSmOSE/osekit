
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_tutorials/Spectrogram/tune_parameters.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_tutorials_Spectrogram_tune_parameters.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tutorials_Spectrogram_tune_parameters.py:


==============================================
Tuning some parameters
==============================================

This code will show you how to tune more 

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob








.. GENERATED FROM PYTHON SOURCE LINES 14-15

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Define standard parameters for spectrogram computation

.. GENERATED FROM PYTHON SOURCE LINES 22-35

.. code-block:: default


    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))

    spectrogram.dataset_sr = 18000
    spectrogram.spectro_duration = 15

    spectrogram.nfft = 1024
    spectrogram.window_size = 1024
    spectrogram.overlap = 80

    spectrogram.dynamic_min = -140
    spectrogram.dynamic_max = -12








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Check size of spectrogram

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: default


    spectrogram.check_spectro_size()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    your smallest tile has a duration of: 15.0 (s), with a number of spectra of 1312 



    your resolutions : time =  0.011 (s) / frequency =  17.578 (Hz)




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Initialize everything needed for spectrogram computation ; in particular, this method will segment and/or resample audio files if needed

.. GENERATED FROM PYTHON SOURCE LINES 42-49

.. code-block:: default


    spectrogram.initialize()

    wav_path = glob.glob(path_osmose_dataset+f'{dataset_name}/data/audio/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/*wav')

    spectrogram.process_all_files(list_wav_to_process=wav_path)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Automatically reshaping audio files to fit the spectro duration value. Files will be 15 seconds long.
    Generating spectrograms for 2021_12_04T06_40_00.wav
    - data min : -0.04359860285233667 
     - data max : 0.0408563081315974 
     - data mean : -3.247289744229672e-05 
     - data std : 0.008187070223697556
    - min log spectro : -155.17865653586463 
     - max log spectro : -8.792647613559254 

    Generating spectrograms for 2021_12_04T06_40_15.wav
    - data min : -0.04882568586851384 
     - data max : 0.04870743239835046 
     - data mean : -3.529869365476084e-05 
     - data std : 0.008114132336847045
    - min log spectro : -162.52365433724486 
     - max log spectro : -6.6810747954638945 

    Generating spectrograms for 2021_12_04T06_50_00.wav
    - data min : -0.0335086626186753 
     - data max : 0.033813805588915724 
     - data mean : -3.0524185453756994e-05 
     - data std : 0.007233751122500802
    - min log spectro : -139.22964650339176 
     - max log spectro : -16.719499298316276 

    Generating spectrograms for 2021_12_04T06_50_15.wav
    - data min : -0.07263915547255434 
     - data max : 0.061255417830334655 
     - data mean : -3.7293761798880864e-05 
     - data std : 0.008284778494543404
    - min log spectro : -138.86415559774903 
     - max log spectro : -8.68462100081442 

    Generating spectrograms for 2021_12_04T06_45_00.wav
    - data min : -0.032715234865200615 
     - data max : 0.03550182447016874 
     - data mean : -2.4692133883995257e-05 
     - data std : 0.007168378028046442
    - min log spectro : -163.78625285181005 
     - max log spectro : -16.799881500988985 

    Generating spectrograms for 2021_12_04T07_00_00.wav
    - data min : -0.035375713649198004 
     - data max : 0.03198670157597114 
     - data mean : -3.059332528855438e-05 
     - data std : 0.006896333257701834
    - min log spectro : -160.144767780349 
     - max log spectro : -16.560741256980645 

    Generating spectrograms for 2021_12_04T06_55_00.wav
    - data min : -0.22347473584851657 
     - data max : 0.15843535804733566 
     - data mean : -3.0380361970596292e-05 
     - data std : 0.015558930399565334
    - min log spectro : -141.9830237478372 
     - max log spectro : 1.5318081234829668 

    Generating spectrograms for 2021_12_04T07_10_00.wav
    - data min : -0.042842036980785037 
     - data max : 0.04610953756812328 
     - data mean : -2.75350265475607e-05 
     - data std : 0.007092825487451484
    - min log spectro : -141.2004496368793 
     - max log spectro : -15.508427400341496 

    Generating spectrograms for 2021_12_04T06_45_15.wav
    - data min : -0.03269245848293409 
     - data max : 0.028989366107367933 
     - data mean : -3.345797923962017e-05 
     - data std : 0.0069611609684040706
    - min log spectro : -162.27378137123438 
     - max log spectro : -17.43068433522557 

    Generating spectrograms for 2021_12_04T07_00_15.wav
    - data min : -0.03393688147347048 
     - data max : 0.03210630230022841 
     - data mean : -1.4857417123885393e-05 
     - data std : 0.006842869836186
    - min log spectro : -151.02354240847745 
     - max log spectro : -16.14882776513548 

    Generating spectrograms for 2021_12_04T07_10_15.wav
    - data min : -0.032965363237320175 
     - data max : 0.035876667331616346 
     - data mean : -2.8923834859942402e-05 
     - data std : 0.006741780561479914
    - min log spectro : -156.56663011881503 
     - max log spectro : -16.573820887261338 

    Generating spectrograms for 2021_12_04T06_55_15.wav
    - data min : -0.04945312696733762 
     - data max : 0.07244144578431054 
     - data mean : -3.1823396834623406e-05 
     - data std : 0.008127781093739316
    - min log spectro : -136.0635514682007 
     - max log spectro : -7.67394275590105 

    Generating spectrograms for 2021_12_04T07_20_00.wav
    - data min : -0.032009486056556125 
     - data max : 0.03455239870490173 
     - data mean : -3.315499885403505e-05 
     - data std : 0.0071454376098808855
    - min log spectro : -144.02750391484136 
     - max log spectro : -15.47882061576428 

    Generating spectrograms for 2021_12_04T07_20_15.wav
    - data min : -0.03378460383390998 
     - data max : 0.029733466138471974 
     - data mean : -3.315408398970459e-05 
     - data std : 0.006786920836091372
    - min log spectro : -154.0602273913807 
     - max log spectro : -16.695950539836165 

    Generating spectrograms for 2021_12_04T07_15_00.wav
    - data min : -0.09921476291877769 
     - data max : 0.0915569995035563 
     - data mean : -2.773243873763186e-05 
     - data std : 0.012043365253247475
    - min log spectro : -146.041854641806 
     - max log spectro : -7.741730047117921 

    Generating spectrograms for 2021_12_04T07_05_00.wav
    - data min : -0.03440507060514711 
     - data max : 0.03469286308534247 
     - data mean : -3.660686571351001e-05 
     - data std : 0.007197522933996403
    - min log spectro : -158.3179049309877 
     - max log spectro : -15.155450349270774 

    Generating spectrograms for 2021_12_04T07_15_15.wav
    - data min : -0.06427555102266189 
     - data max : 0.08810060896062644 
     - data mean : -3.6248280225080664e-05 
     - data std : 0.01138202759919343
    - min log spectro : -151.26065679520752 
     - max log spectro : -13.450800763784287 

    Generating spectrograms for 2021_12_04T07_05_15.wav
    - data min : -0.03118611979200579 
     - data max : 0.038893822484333276 
     - data mean : -4.109031965120795e-05 
     - data std : 0.006843344229533768
    - min log spectro : -159.5980442372961 
     - max log spectro : -16.745789452558355 





.. GENERATED FROM PYTHON SOURCE LINES 50-51

Visualize an example of spectrogram 

.. GENERATED FROM PYTHON SOURCE LINES 51-68

.. code-block:: default


    spectrogram_path = glob.glob(path_osmose_dataset+f'{dataset_name}/processed/spectrogram/{spectrogram.spectro_duration}_{spectrogram.dataset_sr}/{spectrogram.nfft}_{spectrogram.window_size}_{spectrogram.overlap}/image/*png')

    from matplotlib import pyplot as plt
    from matplotlib import image as mpimg
  
    image = mpimg.imread(spectrogram_path[0])
    plt.imshow(image, interpolation='nearest', aspect='auto')

    ax = plt.gca()
    ax.xaxis.set_tick_params(labelbottom=False)
    ax.yaxis.set_tick_params(labelleft=False)
    ax.set_xticks([])
    ax.set_yticks([])

    plt.show()




.. image-sg:: /gallery_tutorials/Spectrogram/images/sphx_glr_tune_parameters_001.png
   :alt: tune parameters
   :srcset: /gallery_tutorials/Spectrogram/images/sphx_glr_tune_parameters_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 20.226 seconds)


.. _sphx_glr_download_gallery_tutorials_Spectrogram_tune_parameters.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_parameters.py <tune_parameters.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_parameters.ipynb <tune_parameters.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
