
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_advanced_workflows/Weather/windspeed_estimation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_advanced_workflows_Weather_windspeed_estimation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_advanced_workflows_Weather_windspeed_estimation.py:


====================================================
Workflow for wind speed estimation using ERA5 data
====================================================

This code builds a workflow to build a parametric model for wind speed estimation based on welch spectra and ERA5 wind speed data

.. GENERATED FROM PYTHON SOURCE LINES 11-14

Prerequisites
------------------------
You need to have in your OSmOSE dataset the joined dataframe containing welch spectra paths and ERA5 data, saved as a csv file located in `<path_osmose_dataset>/<dataset_name>/processed/auxiliary/aux_data.csv` ; see the use case :ref:`sphx_glr_gallery_tutorials_Auxiliary_joiner_auxiliary.py` to do this.

.. GENERATED FROM PYTHON SOURCE LINES 18-20

Codes
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 22-23

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 23-34

.. code-block:: default


    from pathlib import Path
    from OSmOSE.Weather import Weather


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "SES1"
    campaign_name = ""

    date_template = "%Y%m%d_%H%M%S" 








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Select your set of welch spectra through their time resolution and sampling rate

.. GENERATED FROM PYTHON SOURCE LINES 36-40

.. code-block:: default


    time_resolution_welch = 300
    sample_rate_welch = 38400








.. GENERATED FROM PYTHON SOURCE LINES 41-42

Run the Weather class to do the workflow

.. GENERATED FROM PYTHON SOURCE LINES 42-52

.. code-block:: default


    appli_weather = Weather(path_osmose_dataset,dataset_name,time_resolution_welch,sample_rate_welch)

    appli_weather.save_all_welch()

    appli_weather.append_SPL_filtered(freq_min=7500,freq_max=8500)

    appli_weather.wind_speed_estimation()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Your complete welch npz is already built! move on..
      0%|          | 0/175 [00:00<?, ?it/s]     52%|█████▏    | 91/175 [00:00<00:00, 909.70it/s]    100%|██████████| 175/175 [00:00<00:00, 846.78it/s]
    Saving figure /home6/cazaudo/Bureau/osmose_sample_datasets/SES1/appli/weather/scatter_wind_model.png
    Saving figure /home6/cazaudo/Bureau/osmose_sample_datasets/SES1/appli/weather/scatter_ecmwf_model.png
    Saving figure /home6/cazaudo/Bureau/osmose_sample_datasets/SES1/appli/weather/temporal_ecmwf_model.png




.. GENERATED FROM PYTHON SOURCE LINES 53-54

Visualize an example of results 

.. GENERATED FROM PYTHON SOURCE LINES 54-76

.. code-block:: default


    temporal_ecmwf_model = path_osmose_dataset+f'{dataset_name}/appli/weather/temporal_ecmwf_model.png'

    from matplotlib import pyplot as plt
    from matplotlib import image as mpimg

    plt.rcParams['figure.dpi'] = 300
    plt.rcParams['savefig.dpi'] = 300
  
    image = mpimg.imread(temporal_ecmwf_model)
    plt.imshow(image, interpolation='nearest', aspect='auto')

    ax = plt.gca()
    ax.xaxis.set_tick_params(labelbottom=False)
    ax.yaxis.set_tick_params(labelleft=False)
    ax.set_xticks([])
    ax.set_yticks([])

    plt.show()






.. image-sg:: /gallery_advanced_workflows/Weather/images/sphx_glr_windspeed_estimation_001.png
   :alt: windspeed estimation
   :srcset: /gallery_advanced_workflows/Weather/images/sphx_glr_windspeed_estimation_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.056 seconds)


.. _sphx_glr_download_gallery_advanced_workflows_Weather_windspeed_estimation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: windspeed_estimation.py <windspeed_estimation.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: windspeed_estimation.ipynb <windspeed_estimation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
