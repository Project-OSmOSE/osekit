
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_advanced_workflows/Soundscape/compute_LTAS.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_advanced_workflows_Soundscape_compute_LTAS.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_advanced_workflows_Soundscape_compute_LTAS.py:


From spectrograms to LTAS (Long Term Averaged Spectrograms)
============================================================

This code will show you how to compute LTAS from audio file-level spectrograms

.. GENERATED FROM PYTHON SOURCE LINES 12-15

Prerequisites
------------------------
You first need to compute audio file-level spectrograms before computing LTAS ; see the use case :ref:`sphx_glr_gallery_tutorials_Spectrogram_generate_spectrogram.py` to do this.

.. GENERATED FROM PYTHON SOURCE LINES 17-19

Codes
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 19-27

.. code-block:: default





    from pathlib import Path
    from OSmOSE import Spectrogram
    import glob








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Define dataset path and name

.. GENERATED FROM PYTHON SOURCE LINES 29-34

.. code-block:: default


    path_osmose_dataset = "/home6/cazaudo/Bureau/osmose_sample_datasets/"
    dataset_name = "MPSU"
    campaign_name = ""








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Define standard parameters for LTAS computation

.. GENERATED FROM PYTHON SOURCE LINES 36-46

.. code-block:: default


    spectrogram = Spectrogram(dataset_path = Path(path_osmose_dataset, campaign_name, dataset_name))

    dataset_sr = 50000
    time_res = 30
    time_scale = 'all'

    spectrogram.build_LTAS(time_resolution=time_res , sample_rate = dataset_sr, time_scale=time_scale)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home6/cazaudo/Bureau/osmose_V0/src/OSmOSE/Spectrogram.py:1620: UserWarning: Converting to PeriodArray/Index representation will drop timezone information.
      date = time_vector.to_period(label_smoother[time_scale])
    saving LTAS_all.png / Nber of welch: 9




.. GENERATED FROM PYTHON SOURCE LINES 47-48

Visualize an example of LTAS 

.. GENERATED FROM PYTHON SOURCE LINES 48-66

.. code-block:: default


    spectrogram_path = glob.glob(path_osmose_dataset+f'{dataset_name}/processed/LTAS/LTAS_{time_scale}.png')

    from matplotlib import pyplot as plt
    from matplotlib import image as mpimg
  
    image = mpimg.imread(spectrogram_path[0])
    plt.imshow(image)

    ax = plt.gca()
    ax.xaxis.set_tick_params(labelbottom=False)
    ax.yaxis.set_tick_params(labelleft=False)
    ax.set_xticks([])
    ax.set_yticks([])

    plt.show()





.. image-sg:: /gallery_advanced_workflows/Soundscape/images/sphx_glr_compute_LTAS_001.png
   :alt: compute LTAS
   :srcset: /gallery_advanced_workflows/Soundscape/images/sphx_glr_compute_LTAS_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.325 seconds)


.. _sphx_glr_download_gallery_advanced_workflows_Soundscape_compute_LTAS.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: compute_LTAS.py <compute_LTAS.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: compute_LTAS.ipynb <compute_LTAS.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
